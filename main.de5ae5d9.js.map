{"version":3,"sources":["scripts/main.js"],"names":["appendCol","document","querySelector","removeCol","appendRow","removeRow","table","colNumber","rowNumber","maxCellsNum","minCellsNum","createTable","row","col","innerHTML","i","tr","createElement","j","td","append","funcAddCol","disabled","funcRemCol","funcAddRow","funcRemRow","addEventListener"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,kBACnCC,EAAYF,SAASC,cAAc,kBACnCE,EAAYH,SAASC,cAAc,eACnCG,EAAYJ,SAASC,cAAc,eACnCI,EAAQL,SAASC,cAAc,SACjCK,EAAY,EACZC,EAAY,EACVC,EAAc,GACdC,EAAc,EAEpB,SAASC,EAAYC,EAAKC,GACxBP,EAAMQ,UAAY,GAEb,IAAA,IAAIC,EAAI,EAAGA,GAAKH,EAAKG,IAAK,CAGxB,IAFCC,IAAAA,EAAKf,SAASgB,cAAc,MAEzBC,EAAI,EAAGA,GAAKL,EAAKK,IAAK,CACvBC,IAAAA,EAAKlB,SAASgB,cAAc,MAElCD,EAAGI,OAAOD,GAEZb,EAAMc,OAAOJ,IAIjB,IAAMK,EAAa,aACjBd,GAEiBE,IACfT,EAAUsB,UAAW,GAGnBf,GAAaG,IACfP,EAAUmB,UAAW,GAEvBX,EAAYH,EAAWD,IAGnBgB,EAAa,aACjBhB,GAEiBE,IACfT,EAAUsB,UAAW,GAGnBf,GAAaG,IACfP,EAAUmB,UAAW,GAEvBX,EAAYH,EAAWD,IAGnBiB,EAAa,aACjBhB,GAEiBC,IACfL,EAAUkB,UAAW,GAGnBd,GAAaE,IACfL,EAAUiB,UAAW,GAEvBX,EAAYH,EAAWD,IAGnBkB,EAAa,aACjBjB,GAEiBC,IACfL,EAAUkB,UAAW,GAGnBd,GAAaE,IACfL,EAAUiB,UAAW,GAEvBX,EAAYH,EAAWD,IAGzBP,EAAU0B,iBAAiB,QAASL,GACpClB,EAAUuB,iBAAiB,QAASH,GACpCnB,EAAUsB,iBAAiB,QAASF,GACpCnB,EAAUqB,iBAAiB,QAASD","file":"main.de5ae5d9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst appendCol = document.querySelector('.append-column');\nconst removeCol = document.querySelector('.remove-column');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst table = document.querySelector('table');\nlet colNumber = 4;\nlet rowNumber = 4;\nconst maxCellsNum = 10;\nconst minCellsNum = 2;\n\nfunction createTable(row, col) {\n  table.innerHTML = '';\n\n  for (let i = 1; i <= row; i++) {\n    const tr = document.createElement('tr');\n\n    for (let j = 1; j <= col; j++) {\n      const td = document.createElement('td');\n\n      tr.append(td);\n    }\n    table.append(tr);\n  }\n}\n\nconst funcAddCol = () => {\n  colNumber++;\n\n  if (colNumber >= maxCellsNum) {\n    appendCol.disabled = true;\n  };\n\n  if (colNumber >= minCellsNum) {\n    removeCol.disabled = false;\n  }\n  createTable(rowNumber, colNumber);\n};\n\nconst funcRemCol = () => {\n  colNumber--;\n\n  if (colNumber <= maxCellsNum) {\n    appendCol.disabled = false;\n  };\n\n  if (colNumber <= minCellsNum) {\n    removeCol.disabled = true;\n  }\n  createTable(rowNumber, colNumber);\n};\n\nconst funcAddRow = () => {\n  rowNumber++;\n\n  if (rowNumber >= maxCellsNum) {\n    appendRow.disabled = true;\n  };\n\n  if (rowNumber >= minCellsNum) {\n    removeRow.disabled = false;\n  }\n  createTable(rowNumber, colNumber);\n};\n\nconst funcRemRow = () => {\n  rowNumber--;\n\n  if (rowNumber <= maxCellsNum) {\n    appendRow.disabled = false;\n  };\n\n  if (rowNumber <= minCellsNum) {\n    removeRow.disabled = true;\n  }\n  createTable(rowNumber, colNumber);\n};\n\nappendCol.addEventListener('click', funcAddCol);\nremoveCol.addEventListener('click', funcRemCol);\nappendRow.addEventListener('click', funcAddRow);\nremoveRow.addEventListener('click', funcRemRow);\n"]}